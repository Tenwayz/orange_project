{"uid":"55f1e1b37e50e303","name":"Авторизация с незаполненными полями логин ИЛИ пароль","fullName":"tests.test_login#test_empty_name_field","historyId":"2528edab280dfd306b06d050b9dde208","time":{"start":1750306061510,"stop":1750306062272,"duration":762},"status":"failed","statusMessage":"AssertionError: assert 'Required' == 'Require'\n  \n  - Require\n  + Required\n  ?        +","statusTrace":"login_page = <pages.login_page.LoginPage object at 0x7fbf6e4590d0>\nusername = '', password = 'admin123'\n\n    @allure.feature('Авторизация')\n    @allure.story('Авторизация с незаполненными полями логин/пароль')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('Авторизация с незаполненными полями логин ИЛИ пароль')\n    @pytest.mark.parametrize('username, password', [\n        ('', 'admin123'),\n        ('Admin', '')\n    ])\n    def test_empty_name_field(login_page, username, password):\n        with allure.step('Открыть страницу авторизации'):\n            login_page.navigate()\n        with allure.step('Не заполнять поле Логин или Пароль'):\n            login_page.login(username, password)\n        with allure.step('Отображается ошибка о незаполненных полях'):\n            expect(login_page.empty_field_1_message).to_be_visible()\n        with allure.step('Текст ошибки - Required'):\n>           assert login_page.get_empty_field_message() == 'Require'\nE           AssertionError: assert 'Required' == 'Require'\nE             \nE             - Require\nE             + Required\nE             ?        +\n\ntests/test_login.py:41: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1750306059692,"stop":1750306059692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1750306059692,"stop":1750306059981,"duration":289},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1750306059692,"stop":1750306059692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1750306059692,"stop":1750306059692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1750306059692,"stop":1750306059692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1750306059692,"stop":1750306059692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1750306059981,"stop":1750306060177,"duration":196},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1750306059981,"stop":1750306059981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connect_options","time":{"start":1750306059981,"stop":1750306059981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"launch_browser","time":{"start":1750306059981,"stop":1750306059981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder","time":{"start":1750306060177,"stop":1750306060178,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1750306060177,"stop":1750306060177,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1750306060178,"stop":1750306060178,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"output_path","time":{"start":1750306061478,"stop":1750306061478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder","time":{"start":1750306061478,"stop":1750306061478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_context","time":{"start":1750306061479,"stop":1750306061479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"context","time":{"start":1750306061479,"stop":1750306061483,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1750306061483,"stop":1750306061509,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_page","time":{"start":1750306061509,"stop":1750306061509,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 'Required' == 'Require'\n  \n  - Require\n  + Required\n  ?        +","statusTrace":"login_page = <pages.login_page.LoginPage object at 0x7fbf6e4590d0>\nusername = '', password = 'admin123'\n\n    @allure.feature('Авторизация')\n    @allure.story('Авторизация с незаполненными полями логин/пароль')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('Авторизация с незаполненными полями логин ИЛИ пароль')\n    @pytest.mark.parametrize('username, password', [\n        ('', 'admin123'),\n        ('Admin', '')\n    ])\n    def test_empty_name_field(login_page, username, password):\n        with allure.step('Открыть страницу авторизации'):\n            login_page.navigate()\n        with allure.step('Не заполнять поле Логин или Пароль'):\n            login_page.login(username, password)\n        with allure.step('Отображается ошибка о незаполненных полях'):\n            expect(login_page.empty_field_1_message).to_be_visible()\n        with allure.step('Текст ошибки - Required'):\n>           assert login_page.get_empty_field_message() == 'Require'\nE           AssertionError: assert 'Required' == 'Require'\nE             \nE             - Require\nE             + Required\nE             ?        +\n\ntests/test_login.py:41: AssertionError","steps":[{"name":"Открыть страницу авторизации","time":{"start":1750306061510,"stop":1750306061994,"duration":484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Не заполнять поле Логин или Пароль","time":{"start":1750306061994,"stop":1750306062261,"duration":267},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Отображается ошибка о незаполненных полях","time":{"start":1750306062261,"stop":1750306062267,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Текст ошибки - Required","time":{"start":1750306062267,"stop":1750306062271,"duration":4},"status":"failed","statusMessage":"AssertionError: assert 'Required' == 'Require'\n  \n  - Require\n  + Required\n  ?        +\n","statusTrace":"  File \"/home/runner/work/orange_project/orange_project/tests/test_login.py\", line 41, in test_empty_name_field\n    assert login_page.get_empty_field_message() == 'Require'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_context::0","time":{"start":1750306062279,"stop":1750306062289,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder::0","time":{"start":1750306062289,"stop":1750306062289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder::0","time":{"start":1750306066970,"stop":1750306066970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1750306066970,"stop":1750306067005,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1750306067007,"stop":1750306067013,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Авторизация с незаполненными полями логин/пароль"},{"name":"feature","value":"Авторизация"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"fv-az1344-288"},{"name":"thread","value":"6077-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser_name","value":"'chromium'"},{"name":"password","value":"'admin123'"},{"name":"username","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"fc464fc0b7e1c43b","reportUrl":"https://Tenwayz.github.io/orange_project/3//#testresult/fc464fc0b7e1c43b","status":"passed","time":{"start":1750305626896,"stop":1750305627676,"duration":780}}]},"tags":[]},"source":"55f1e1b37e50e303.json","parameterValues":["'chromium'","'admin123'","''"]}